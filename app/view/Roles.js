/*
 * File: app/view/Roles.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SECURITY.view.Roles', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.roles',

    requires: [
        'SECURITY.view.RolesViewModel',
        'SECURITY.view.RolesViewController',
        'Ext.grid.Panel',
        'Ext.grid.column.Date',
        'Ext.form.field.Display',
        'Ext.form.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Check',
        'Ext.form.field.ComboBox',
        'Ext.button.Button',
        'Ext.toolbar.Toolbar'
    ],

    controller: 'roles',
    viewModel: {
        type: 'roles'
    },
    reference: 'rolesPanel',
    height: 660,
    shrinkWrap: 0,
    width: 657,
    layout: 'border',
    collapsed: false,
    title: 'Role Management',

    items: [
        {
            xtype: 'gridpanel',
            flex: 1,
            region: 'center',
            split: true,
            reference: 'list',
            resizable: false,
            scrollable: true,
            title: '',
            forceFit: true,
            bind: {
                store: '{roles}'
            },
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'id',
                    text: 'ID'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'name',
                    text: 'Name'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return value !== null ? value.code : '';
                    },
                    dataIndex: 'roleType',
                    text: 'Role Type'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return value !== null ? value.length : '';
                    },
                    dataIndex: 'actions',
                    text: 'Actions'
                },
                {
                    xtype: 'datecolumn',
                    dataIndex: 'createdOn',
                    text: 'Created On',
                    format: 'm/j/Y'
                }
            ],
            listeners: {
                select: 'select'
            }
        },
        {
            xtype: 'panel',
            flex: 1,
            region: 'south',
            split: true,
            reference: 'display',
            height: 150,
            id: 'displayPanel',
            layout: 'card',
            bodyBorder: true,
            items: [
                {
                    xtype: 'panel',
                    reference: 'selectMessage',
                    layout: {
                        type: 'vbox',
                        align: 'center',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'container',
                            flex: 1,
                            html: '<h1>Please select a record</h1>'
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    reference: 'details',
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'displayfield',
                            fieldLabel: 'Group Email',
                            bind: {
                                value: '{record.groupEmail}'
                            }
                        },
                        {
                            xtype: 'displayfield',
                            fieldLabel: 'Name',
                            bind: {
                                value: '{record.name}'
                            }
                        },
                        {
                            xtype: 'displayfield',
                            fieldLabel: 'Role Type',
                            bind: {
                                value: '{record.roleType}'
                            }
                        },
                        {
                            xtype: 'displayfield',
                            fieldLabel: 'Created On',
                            bind: {
                                value: '{record.createdOn}'
                            }
                        }
                    ]
                },
                {
                    xtype: 'form',
                    reference: 'formMain',
                    height: 1000,
                    layout: 'border',
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'gridpanel',
                            region: 'center',
                            reference: 'actionsGrid',
                            title: 'Actions to be Performed',
                            bind: {
                                store: '{actionsAssignedToRoleDTO}'
                            },
                            columns: [
                                {
                                    xtype: 'checkcolumn',
                                    dataIndex: 'assigned',
                                    text: 'Assigned'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'code',
                                    text: 'Code'
                                },
                                {
                                    xtype: 'checkcolumn',
                                    dataIndex: 'canView',
                                    text: 'View'
                                },
                                {
                                    xtype: 'checkcolumn',
                                    dataIndex: 'canApprove',
                                    text: 'Approve/Reject'
                                },
                                {
                                    xtype: 'checkcolumn',
                                    dataIndex: 'canEdit',
                                    text: 'Edit',
                                    listeners: {
                                        select: 'onCheckcolumnSelect'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            region: 'west',
                            reference: 'formFields',
                            itemId: 'myform3',
                            width: 356,
                            bodyPadding: 10,
                            title: '',
                            items: [
                                {
                                    xtype: 'textfield',
                                    fieldLabel: 'Name',
                                    name: 'name',
                                    bind: {
                                        value: '{record.name}'
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    formBind: false,
                                    fieldLabel: 'Group Email',
                                    name: 'groupEmail',
                                    emptyText: 'mail@example.com',
                                    maxLength: 50,
                                    minLength: 5,
                                    vtype: 'email',
                                    bind: {
                                        value: '{record.groupemail}'
                                    }
                                },
                                {
                                    xtype: 'combobox',
                                    fieldLabel: 'Role Type',
                                    name: 'roleTypeId',
                                    displayField: 'code',
                                    valueField: 'id',
                                    bind: {
                                        store: '{roleTypes}'
                                    }
                                },
                                {
                                    xtype: 'displayfield',
                                    renderer: function(value, displayField) {
                                        return Ext.Date.format(value, 'm/d/Y');
                                    },
                                    height: 150,
                                    fieldLabel: 'Created On',
                                    name: 'createdOn',
                                    bind: {
                                        value: '{record.createdOn}'
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            region: 'south',
                            height: 38,
                            padding: 10,
                            layout: {
                                type: 'hbox',
                                align: 'middle',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    formBind: true,
                                    itemId: 'saveButton',
                                    margin: 5,
                                    text: 'Save',
                                    listeners: {
                                        click: 'save'
                                    }
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    itemId: 'cancelButton',
                                    margin: 5,
                                    text: 'Cancel',
                                    listeners: {
                                        click: 'cancelEdit'
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            items: [
                {
                    xtype: 'button',
                    cls: 'hdrButton',
                    text: 'Add Role',
                    listeners: {
                        click: 'add'
                    }
                },
                {
                    xtype: 'button',
                    reference: 'btnEdit',
                    cls: 'hdrButton',
                    disabled: true,
                    text: 'Edit',
                    bind: {
                        hidden: '{!record}'
                    },
                    listeners: {
                        click: 'edit'
                    }
                },
                {
                    xtype: 'button',
                    text: 'Delete Role',
                    bind: {
                        hidden: '{!record}'
                    },
                    listeners: {
                        click: 'remove'
                    }
                }
            ]
        }
    ]

});