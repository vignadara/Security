/*
 * File: app/view/RolesViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SECURITY.view.RolesViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.roles',

    showView: function(view) {
        var layout = this.getReferences().display.getLayout();
        layout.setActiveItem(this.lookupReference(view));
    },

    showEditForm: function(record, panelTitle) {
         var formPanel = this.getReferences().formFields,
        form = formPanel.getForm(),
             actionsStore = this.getStore('actionsAssignedToRoleDTO');

                // Load record model into form
                form.loadRecord(record);

                // Set title
                formPanel.setTitle(panelTitle);

                Ext.log('record is');
                Ext.log({msg:record.data});
                Ext.log({msg:record.data.id});

                actionsStore.removeAll();

                actionsStore.getProxy().setUrl('/DIAM_SECURITY/api/admin/actions_for_role/' + record.data.id);
                actionsStore.load();

                // Show form
                this.showView('formMain');
    },

    editRole: function() {
         var record = this.getViewModel().get('record');
                var title = 'Edit role "' + record.data.name + '"';
                this.showEditForm(record, title);
    },

    addRole: function() {
          var formPanel = this.getReferences().formFields,
                    form = formPanel.getForm(),
                    newRecord = Ext.create('model.role');

                newRecord.data.id = 0;
                newRecord.data.roleTypeId = null;

                // Clear form
                form.reset();

                this.showEditForm(newRecord, 'Add Role');
    },

    select: function(rowmodel, record, index, eOpts) {
        // Set selected record
        this.getViewModel().set('record', record);

        // Show details
        if(record !== null) {
            this.editRole();
        }
    },

    onCheckcolumnSelect: function(checkcolumn) {

    },

    save: function(button, e, eOpts) {
        var me = this;
        var form = this.getReferences().formFields.getForm(),
            record = form.getRecord(),
            store = this.getStore('roles'),
            actionsStore = this.getStore('actionsAssignedToRoleDTO');

        // Valid
        if (form.isValid()) {
            var appcode = window.localStorage.getItem('appCode');
            record.data.applicationCode =appcode;
            // Update associated record with values
            form.updateRecord();

            var sendDataArray = [];
            actionsStore.each(function(record){
                sendDataArray.push(record.data);
            });


            Ext.Ajax.request({
                url: '/DIAM_SECURITY/api/admin/roles/save',
                method: 'POST',

                params: {
                    role: Ext.encode(record.data),
                    actions: Ext.encode(sendDataArray)
                },

                success: function(response, opts) {

                    var obj = Ext.decode(response.responseText);
                    if(obj.success){
                        Ext.Msg.alert('Status', 'Role saved successfully.', this.showResult, this);
                    }else{
                        Ext.Msg.alert('Not successful');
                    }
                    console.dir(obj);



                    store.removeAll();
                    store.load();

                    // Hide display
                    me.showView('selectMessage');

                },
                failure: function(response, opts) {

                    Ext.log({msg:'server-side failure with status code ' + response.status});
                }
            });
            // Add to store if new record
            if (record.phantom) {

                // TODO: Assign the record's ID from data source
                // Normally, this value would be auto-generated,
                // or returned from the server


                // Add to store
                //store.add(record);

            }

            // Commit changes
            // store.commitChanges();

            // Display record
            // this.select(this, record);

        }
    },

    cancelEdit: function(button, e, eOpts) {
        // Show details
        //this.showView('details');
        this.showView('selectMessage');
        this.lookupReference('list').getSelectionModel().deselectAll();
    },

    add: function(button, e, eOpts) {
        this.addRole();
    },

    edit: function(button, e, eOpts) {
        this.editRole();
    },

    remove: function(button, e, eOpts) {
        var me = this;

        // Ask user to confirm this action
        Ext.Msg.confirm('Confirm Delete', 'Are you sure you want to delete this role?', function(result) {

            // User confirmed yes
            if (result == 'yes') {

                var record = me.getViewModel().get('record'),
                    store = me.getStore('roles');

                Ext.Ajax.request({
                    url: '/DIAM_SECURITY/api/admin/roles/delete',
                    params: {
                        roleId: record.data.id
                    },



                    success: function(response, opts) {

                        var obj = Ext.decode(response.responseText);
                        //console.dir(obj);

                        Ext.Msg.alert('Status', 'Role deleted successfully.', this.showResult, this);

                        store.removeAll();
                        store.load();
                    },
                    failure: function(response, opts) {

                        Ext.log({msg:'server-side failure with status code ' + response.status});
                    }
                });

                // Delete record from store
                //store.remove(record);

                // Hide display
                me.showView('selectMessage');

            }

        });
    }

});
